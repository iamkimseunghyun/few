import { type QueryClient } from '@tanstack/react-query';
import { api } from '@/lib/trpc-client';
import { queryKeys, CACHE_TIME } from '@/lib/react-query-config';

/**
 * 이벤트 상세 페이지 진입 시 필요한 데이터들을 프리페칭
 */
export async function prefetchEventDetails(
  queryClient: QueryClient,
  eventId: string
) {
  // 이벤트 상세 정보 프리페칭
  await queryClient.prefetchQuery({
    queryKey: queryKeys.events.detail(eventId),
    queryFn: () => api.events.getById.fetch({ id: eventId }),
    staleTime: CACHE_TIME.STATIC.staleTime,
    gcTime: CACHE_TIME.STATIC.gcTime,
  });

  // 해당 이벤트의 리뷰들 프리페칭
  await queryClient.prefetchQuery({
    queryKey: queryKeys.reviews.byEvent(eventId),
    queryFn: () => api.reviews.getByEventId.fetch({ eventId }),
    staleTime: CACHE_TIME.DYNAMIC.staleTime,
    gcTime: CACHE_TIME.DYNAMIC.gcTime,
  });

  // 해당 이벤트의 다이어리들 프리페칭
  await queryClient.prefetchQuery({
    queryKey: queryKeys.diaries.byEvent(eventId),
    queryFn: () => api.musicDiary.getFeed.fetch({ eventId }),
    staleTime: CACHE_TIME.DYNAMIC.staleTime,
    gcTime: CACHE_TIME.DYNAMIC.gcTime,
  });
}

/**
 * 리뷰 상세 페이지 진입 시 필요한 데이터들을 프리페칭
 */
export async function prefetchReviewDetails(
  queryClient: QueryClient,
  reviewId: string
) {
  // 리뷰 상세 정보 프리페칭
  await queryClient.prefetchQuery({
    queryKey: queryKeys.reviews.detail(reviewId),
    queryFn: () => api.reviews.getById.fetch({ id: reviewId }),
    staleTime: CACHE_TIME.DYNAMIC.staleTime,
    gcTime: CACHE_TIME.DYNAMIC.gcTime,
  });

  // 해당 리뷰의 댓글들 프리페칭
  await queryClient.prefetchQuery({
    queryKey: queryKeys.comments.byReview(reviewId),
    queryFn: () => api.comments.getByReviewId.fetch({ reviewId }),
    staleTime: CACHE_TIME.DYNAMIC.staleTime,
    gcTime: CACHE_TIME.DYNAMIC.gcTime,
  });
}

/**
 * 홈페이지 진입 시 필요한 데이터들을 프리페칭
 */
export async function prefetchHomeData(queryClient: QueryClient) {
  await Promise.all([
    // 인기 이벤트
    queryClient.prefetchQuery({
      queryKey: queryKeys.events.popular(),
      queryFn: () => api.events.getPopular.fetch(),
      staleTime: CACHE_TIME.DYNAMIC.staleTime * 2,
      gcTime: CACHE_TIME.DYNAMIC.gcTime * 2,
    }),

    // 다가오는 이벤트
    queryClient.prefetchQuery({
      queryKey: queryKeys.events.upcoming(),
      queryFn: () => api.events.getUpcoming.fetch(),
      staleTime: CACHE_TIME.DYNAMIC.staleTime,
      gcTime: CACHE_TIME.DYNAMIC.gcTime,
    }),

    // 베스트 리뷰
    queryClient.prefetchQuery({
      queryKey: queryKeys.reviews.best(),
      queryFn: () => api.reviews.getBest.fetch(),
      staleTime: CACHE_TIME.DYNAMIC.staleTime * 2,
      gcTime: CACHE_TIME.DYNAMIC.gcTime * 2,
    }),
  ]);
}

/**
 * 사용자 프로필 페이지 진입 시 필요한 데이터들을 프리페칭
 */
export async function prefetchUserProfile(
  queryClient: QueryClient,
  userId: string
) {
  await Promise.all([
    // 사용자 프로필 정보
    queryClient.prefetchQuery({
      queryKey: queryKeys.users.profile(userId),
      queryFn: () => api.users.getById.fetch({ id: userId }),
      staleTime: CACHE_TIME.USER.staleTime,
      gcTime: CACHE_TIME.USER.gcTime,
    }),

    // 사용자가 작성한 리뷰
    queryClient.prefetchQuery({
      queryKey: queryKeys.reviews.byUser(userId),
      queryFn: () => api.reviews.getByUserId.fetch({ userId }),
      staleTime: CACHE_TIME.DYNAMIC.staleTime,
      gcTime: CACHE_TIME.DYNAMIC.gcTime,
    }),

    // 사용자가 작성한 다이어리
    queryClient.prefetchQuery({
      queryKey: queryKeys.diaries.byUser(userId),
      queryFn: () => api.musicDiary.getUserDiaries.fetch({ userId }),
      staleTime: CACHE_TIME.DYNAMIC.staleTime,
      gcTime: CACHE_TIME.DYNAMIC.gcTime,
    }),
  ]);
}